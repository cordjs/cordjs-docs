*********************************************
API работы с состоянием (контекстом)  виджета
*********************************************

Контекст (Context) --- специальный тип (класс) для хранения состояния виджета. Он умеет хранить простые скалярные
типы, массивы, нетипизированные объекты, а также модели и коллекции CordJS. Точнее говоря, в контекст можно записать
любые данные, но  во время цикла сериализации/десериализации при передаче с сервера в браузер данные, которые
контекст "не умеет" корректно обрабатывать, будут либо искажены, либо потеряны.

Индивидуальный экземпляр контекста доступен в каждом виджете через динамическое свойство ``ctx``. Помимо заданных
разработчиком данных, в контексте всегда есть поле ``id`` в котором содержится уникальный строковой идентификатор
виджета.

Этот раздел посвящён довольно простому API контекста.

Запись
======

``@ctx.set`` --- запись данных в контекст
-----------------------------------------


``@ctx.setWithFeedback`` --- запись с обратной связью
-----------------------------------------------------


Отложенные значения переменных (поддержка асинхронности)
========================================================


``@ctx.setDeferred`` и ``@ctx.setServerDeferred`` --- пометить переменную как "отложенную"
------------------------------------------------------------------------------------------

``@ctx.isDeferred`` --- проверка на "отложенность"
--------------------------------------------------

``@ctx.getPromise`` --- получить значение отложенной переменной в Promise-обёртке
---------------------------------------------------------------------------------


Чтение переменных контекста
===========================


``@ctx.isEmpty`` --- проверка на пустое значение
------------------------------------------------


Особенности внутренней работы контекста
=======================================

