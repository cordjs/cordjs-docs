*******************
CSS-файл(ы) виджета
*******************

Для описания таблиц стилей в CordJS используется CSS-препроцессор
`Stylus <https://learnboost.github.io/stylus/>`_. Основной файл с "персональными" стилями виджета должен находиться в
папке виджета, называться так же, как и папка, с расширением ``.styl``. О том, как включать этот файл и подключать
другие CSS-зависимости, написано в разделе :ref:`widget-css-deps`.

CordJS никак не регламентирует, каким именно образом должны быть организованы стили виджетов, систему именования
классов и пр. Некоторые мысли, на которые можно опираться, написаны в концептуальном документе для будущих версий
CordJS :doc:`/vdom/css-principles`. Очевидно, что в главном файле стилей виджета стоит описывать только классы для
внутренней разметки виджета и "не трогать" разметку других виджетов.


Как включать stylus-файлы с общими переменными
==============================================

Stylus --- гибкий инструмент, позволяющий создавать общие библиотеки переменных и подключать их в файлах стилей
разных виджетов. Для поддержки такого сценария сборщик CordJS производит препроцессинг stylus-файлов, чтобы можно
было в них использовать канонические пути в стиле CordJS в директиве ``@import``. Пример:

.. code-block:: sass
  :linenos:
  :caption: public/bundles/hello/example/widgets/someWidget/someWidget.styl
  :emphasize-lines: 1

  @import "common//base/commonVars"

  .some-widget__input
    background-color: $darkBg

В примере подключится файл ``public/bundles/hello/common/widgets/base/commonVars.styl``, в котором объявлена
переменная ``$darkBg``.

.. warning::

  Возможность использовать каконические пути для подключаемых stylus-файлов "не рекурсивна", т.е. в файле
  ``commonVars.styl`` использовать в директиве ``@import`` канонический путь нельзя --- он не будет предварительно
  преобразован и компилятор Stylus выдаст ошибку.

  Если возникает такая необходимость, в качестве альтернативы можно указывать обычный путь к файлу, начинающийся с
  ``public/`` (т.е. от корня проекта без начального ``/``). Таким образом можно подключить stylus-файл из любого
  места проекта. При этом расширение ``.styl`` указывать не требуется.
